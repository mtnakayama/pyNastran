#os:
# - linux
# - osx

language: python
python:
#  - "2.7"
#  - "3.5"
  - "3.6"
#  - "3.5-dev" # 3.5 development branch
#  - "nightly" # currently points to 3.6-dev

#-------------------------------------------------
# old-A

#before_install:
#  - sudo apt-get update -qq
#  - sudo apt-get install -qq python-dev python-setuptools  python3-dev python3-setuptools libblas-dev liblapack-dev libatlas-base-dev gfortran
#
# command to install dependencies
#install: "pip install -r requirements.txt"
#
# command to run tests
#script: nosetests
#script: "python pyNastran/all_tests.py"
#-------------------------------------------------
#new-B
# per https://gist.github.com/dan-blanchard/7045057

#notifications:
#  email: false

# Setup anaconda
before_install:
 - sudo -H pip install auxlib
# - sudo pip install conda


# per http://conda.pydata.org/docs/travis.html
install:
  - sudo apt-get update
  - sudo apt-get install -y gfortran graphviz make

  # We do this conditionally because it saves us some downloading if the
  # version is the same.

   # v4.0 (latest) has a problem with auxlib, so switching to 3.19.0 (2016/3/23)
   #wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
   #wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;

#  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
#      wget https://repo.continuum.io/miniconda/Miniconda2-4.1.11-Linux-x86_64.sh -O miniconda.sh;
#    else
#      wget https://repo.continuum.io/miniconda/Miniconda3-4.1.11-Linux-x86_64.sh -O miniconda.sh;
#    fi
#  - bash miniconda.sh -b -p $HOME/miniconda
#  - export PATH="$HOME/miniconda/bin:$PATH"
#  - hash -r
#  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a

  - conda install psutil pip
#  - pip install coveralls

  # install dependencies
  # if line per https://docs.travis-ci.com/user/multi-os/
  - echo "python version=$TRAVIS_PYTHON_VERSION"
  
  # removed pandas
  # py 3.6
  - conda remove -y -n no-exist
  - conda remove -y -n test-environment
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION alabaster>=0.7.9 atlas cycler docopt h5py matplotlib numpy>=1.12 numpydoc>=0.5.0 pillow pygments>=2.1.0 pyqt scipy sphinx>=1.5.0 sphinx_rtd_theme>=0.1.9 six vtk
  
  # buildbot-travis runs each line in a separate shell, so this must all be one line.
  - source activate test-environment && conda list && python setup.py develop && cd docs/html_docs && make html > make.out 2>&1

# Run test
script:
  #- nosetests --with-cov --cov YOUR_PACKAGE_NAME_HERE --cov-config .coveragerc --logging-level=INFO
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then coverage run pyNastran/all_tests.py; fi
  - if [[ "$TRAVIS_PYTHON_VERSION" == "3.5" ]]; then python pyNastran/all_tests.py; fi
  - if [[ "$TRAVIS_PYTHON_VERSION" == "3.6" ]]; then python pyNastran/all_tests.py; fi
  - if [[ "$TRAVIS_PYTHON_VERSION" == "nightly" ]]; then python pyNastran/all_tests_no_gui.py; fi

  # good
  #- "python pyNastran/all_tests.py"
  #- "python -m coverage run pyNastran/all_tests_no_gui.py"

  # good
  #- "coverage run pyNastran/all_tests_no_gui.py"

# https://github.com/z4r/python-coveralls
# Calculate coverage
after_success:
  - coveralls
#  - codecov
#after_success:
#  - coveralls --config_file .coveragerc
